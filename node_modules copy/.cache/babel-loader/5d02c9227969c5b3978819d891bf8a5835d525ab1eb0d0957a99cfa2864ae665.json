{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dru\\\\Documents\\\\Personal Projects\\\\threeJSBlenderBaby\\\\src\\\\pages\\\\Portfolio.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport projectList from \"./assets/projects.json\";\nimport ProjectCard from '../components/ProjectCard/ProjectCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Portfolio() {\n  _s();\n  const [projectState, setProjects] = useState(projectList);\n\n  //filter through projects for specific technologies\n  function findProject(tag) {\n    //filter through JSON to get a clean run each time\n    const projects = projectList.filter(data => {\n      for (let i = 0; i < data.tags.length; i++) {\n        if (data.tags[i] === tag) {\n          return true;\n        }\n      }\n      return setProjects(projectList);\n    });\n\n    //set state to new array, to be fed into child components\n    setProjects(projects);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"stack list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          findProject(\"HTML\");\n        },\n        children: \"HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          findProject(\"CSS\");\n        },\n        children: \"CSS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          findProject(\"JS\");\n        },\n        children: \"JavaScript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          findProject(\"API\");\n        },\n        children: \"API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          findProject(\"MYSQL\");\n        },\n        children: \"SQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: projectState.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n          id: project.id,\n          name: project.name,\n          image: project.image,\n          description: project.description,\n          href: project.href\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Portfolio, \"bMQCQDIDBKygJ9u24geLm79Lu6M=\");\n_c = Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["React","useState","projectList","ProjectCard","jsxDEV","_jsxDEV","Portfolio","_s","projectState","setProjects","findProject","tag","projects","filter","data","i","tags","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","project","id","name","image","description","href","_c","$RefreshReg$"],"sources":["C:/Users/Dru/Documents/Personal Projects/threeJSBlenderBaby/src/pages/Portfolio.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport projectList from \"./assets/projects.json\"\r\nimport ProjectCard from '../components/ProjectCard/ProjectCard';\r\n\r\n\r\nexport default function Portfolio() {\r\n    const [projectState, setProjects] = useState(projectList)\r\n\r\n    \r\n    //filter through projects for specific technologies\r\n    function findProject(tag) {\r\n        \r\n        //filter through JSON to get a clean run each time\r\n        const projects = projectList.filter(data => {\r\n            for (let i = 0; i < data.tags.length; i++) {\r\n                if (data.tags[i] === tag) {\r\n                    return true\r\n                }\r\n            } return setProjects(projectList)\r\n        });\r\n\r\n\r\n        //set state to new array, to be fed into child components\r\n        setProjects(projects);\r\n\r\n    };\r\nreturn (\r\n    <section>\r\n        <div>\r\n                <h1>stack list</h1>\r\n                <button onClick={() => { findProject(\"HTML\")}}>HTML</button>\r\n                <button onClick={() => { findProject(\"CSS\")}}>CSS</button>\r\n                <button onClick={() => { findProject(\"JS\")}}>JavaScript</button>\r\n                <button onClick={() => { findProject(\"API\")}}>API</button>\r\n                <button onClick={() => { findProject(\"MYSQL\")}}>SQL</button>\r\n            </div>\r\n            <div>\r\n                <h1>projects</h1>\r\n                <div>\r\n                    {projectState.map(project => (\r\n                        <ProjectCard\r\n\r\n                            id={project.id}\r\n                            key={project.id}\r\n                            name={project.name}\r\n                            image={project.image}\r\n                            description={project.description}\r\n                            href={project.href}\r\n\r\n                        />\r\n\r\n                    ))}</div>\r\n            </div>\r\n    </section>\r\n)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}