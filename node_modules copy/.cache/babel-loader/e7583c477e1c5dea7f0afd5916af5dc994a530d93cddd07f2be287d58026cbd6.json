{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dru\\\\Documents\\\\Personal Projects\\\\threeJSBlenderBaby\\\\src\\\\components\\\\backgroundShapes\\\\index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { Canvas } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { BufferGeometry } from \"three\";\nimport { MeshLine, MeshLineMaterial } from \"three.meshline\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shapes = require(\"../../assets/3dModels/backgroundShapes.gltf\");\nexport function Model(props) {\n  _s();\n  // destructure shapes and materials from gltf file\n  const {\n    nodes,\n    materials\n  } = useGLTF(shapes);\n  const thickLineMaterial = new MeshLineMaterial({\n    color: new THREE.Color(\"white\"),\n    lineWidth: 0.03,\n    resolution: new THREE.Vector2(window.innerWidth, window.innerHeight),\n    sizeAttenuation: true,\n    near: 1,\n    far: 1000,\n    depthWrite: false,\n    depthTest: false,\n    alphaTest: 0.5,\n    transparent: true\n  });\n\n  // loop through all geometries in nodes and apply MeshLine to edges\n  Object.values(nodes).forEach(node => {\n    if (node.geometry) {\n      const geometry = node.geometry.clone();\n      const edges = new THREE.EdgesGeometry(geometry);\n      const line = new MeshLine();\n      line.setGeometry(edges);\n      const mesh = new THREE.Mesh(line.geometry, thickLineMaterial);\n      node.add(mesh);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    position: [0, 0, 3],\n    ...props,\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.Cube.geometry,\n      material: materials[\"Material.002\"],\n      position: [-1.59, 0.8, -0.09],\n      rotation: [-0.26, 0.43, 0.58],\n      scale: 0.27\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.Cube001.geometry,\n      material: materials[\"Material.003\"],\n      position: [1.68, 0.22, 0.51],\n      rotation: [0.14, -0.61, 0.24],\n      scale: 0.26\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.Roundcube.geometry,\n      material: materials[\"Material.003\"],\n      position: [-0.67, -0.78, 0],\n      scale: 0.28\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.Cube002.geometry,\n      material: materials[\"Material.005\"],\n      position: [-0.96, -0.59, -0.72],\n      rotation: [-0.31, 0.09, 0.68],\n      scale: [0.63, 0.09, 0.11]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.Cube003.geometry,\n      material: materials[\"Material.003\"],\n      position: [-2.08, 0.7, -0.49],\n      rotation: [-0.27, 0.44, 0.58],\n      scale: 0.27\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.Cube004.geometry,\n      material: materials[\"Material.005\"],\n      position: [0.23, 0.5, -0.28],\n      rotation: [2.28, -0.63, 2.04],\n      scale: 0.18\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.Cube005.geometry,\n      material: materials[\"Material.003\"],\n      position: [0.6, -0.69, -0.38],\n      rotation: [1.11, 0.15, 1.87],\n      scale: 0.28\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Model, \"3EbVibAGuOW6XeBFAk0EenvHzHI=\", false, function () {\n  return [useGLTF];\n});\n_c = Model;\nexport default function BackgroundShapes() {\n  _s2();\n  const canvasRef = useRef();\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    colorManagement: true,\n    shadowMap: true,\n    camera: {\n      position: [0, 0, 5],\n      fov: 50\n    },\n    resize: {\n      scroll: false\n    },\n    gl: {\n      powerPreference: \"high-performance\",\n      alpha: true,\n      antialias: false,\n      stencil: false,\n      depth: false\n    },\n    onCreated: _ref => {\n      let {\n        gl\n      } = _ref;\n      gl.setClearColor(\"white\");\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10],\n      intensity: 0.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [-10, -10, -10],\n      intensity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Model, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n_s2(BackgroundShapes, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n_c2 = BackgroundShapes;\nvar _c, _c2;\n$RefreshReg$(_c, \"Model\");\n$RefreshReg$(_c2, \"BackgroundShapes\");","map":{"version":3,"names":["React","useRef","useGLTF","Canvas","THREE","BufferGeometry","MeshLine","MeshLineMaterial","jsxDEV","_jsxDEV","shapes","require","Model","props","_s","nodes","materials","thickLineMaterial","color","Color","lineWidth","resolution","Vector2","window","innerWidth","innerHeight","sizeAttenuation","near","far","depthWrite","depthTest","alphaTest","transparent","Object","values","forEach","node","geometry","clone","edges","EdgesGeometry","line","setGeometry","mesh","Mesh","add","position","dispose","children","castShadow","receiveShadow","Cube","material","rotation","scale","fileName","_jsxFileName","lineNumber","columnNumber","Cube001","Roundcube","Cube002","Cube003","Cube004","Cube005","_c","BackgroundShapes","_s2","canvasRef","colorManagement","shadowMap","camera","fov","resize","scroll","gl","powerPreference","alpha","antialias","stencil","depth","onCreated","_ref","setClearColor","intensity","_c2","$RefreshReg$"],"sources":["C:/Users/Dru/Documents/Personal Projects/threeJSBlenderBaby/src/components/backgroundShapes/index.js"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport { BufferGeometry } from \"three\";\r\nimport { MeshLine, MeshLineMaterial } from \"three.meshline\";\r\n\r\nconst shapes = require(\"../../assets/3dModels/backgroundShapes.gltf\");\r\n\r\nexport function Model(props) {\r\n    // destructure shapes and materials from gltf file\r\n    const { nodes, materials } = useGLTF(shapes);\r\n\r\n    const thickLineMaterial = new MeshLineMaterial({\r\n        color: new THREE.Color(\"white\"),\r\n        lineWidth: 0.03,\r\n        resolution: new THREE.Vector2(window.innerWidth, window.innerHeight),\r\n        sizeAttenuation: true,\r\n        near: 1,\r\n        far: 1000,\r\n        depthWrite: false,\r\n        depthTest: false,\r\n        alphaTest: 0.5,\r\n        transparent: true,\r\n    });\r\n\r\n    // loop through all geometries in nodes and apply MeshLine to edges\r\n    Object.values(nodes).forEach((node) => {\r\n        if (node.geometry) {\r\n            const geometry = node.geometry.clone();\r\n            const edges = new THREE.EdgesGeometry(geometry);\r\n            const line = new MeshLine();\r\n            line.setGeometry(edges);\r\n            const mesh = new THREE.Mesh(line.geometry, thickLineMaterial);\r\n            node.add(mesh);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <group position={[0, 0, 3]} {...props} dispose={null}>\r\n            <mesh\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cube.geometry}\r\n                material={materials[\"Material.002\"]}\r\n                position={[-1.59, 0.8, -0.09]}\r\n                rotation={[-0.26, 0.43, 0.58]}\r\n                scale={0.27}\r\n            />\r\n            <mesh\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cube001.geometry}\r\n                material={materials[\"Material.003\"]}\r\n                position={[1.68, 0.22, 0.51]}\r\n                rotation={[0.14, -0.61, 0.24]}\r\n                scale={0.26}\r\n            />\r\n            <mesh\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Roundcube.geometry}\r\n                material={materials[\"Material.003\"]}\r\n                position={[-0.67, -0.78, 0]}\r\n                scale={0.28}\r\n            />\r\n            <mesh\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cube002.geometry}\r\n                material={materials[\"Material.005\"]}\r\n                position={[-0.96, -0.59, -0.72]}\r\n                rotation={[-0.31, 0.09, 0.68]}\r\n                scale={[0.63, 0.09, 0.11]}\r\n            />\r\n            <mesh\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cube003.geometry}\r\n                material={materials[\"Material.003\"]}\r\n                position={[-2.08, 0.7, -0.49]}\r\n                rotation={[-0.27, 0.44, 0.58]}\r\n                scale={0.27}\r\n            />\r\n            <mesh\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cube004.geometry}\r\n                material={materials[\"Material.005\"]}\r\n                position={[0.23, 0.5, -0.28]}\r\n                rotation={[2.28, -0.63, 2.04]}\r\n                scale={0.18}\r\n            /><mesh\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cube005.geometry}\r\n                material={materials[\"Material.003\"]}\r\n                position={[0.6, -0.69, -0.38]}\r\n                rotation={[1.11, 0.15, 1.87]}\r\n                scale={0.28}\r\n            />\r\n        </group>\r\n    );\r\n}\r\n\r\nexport default function BackgroundShapes() {\r\n    const canvasRef = useRef();\r\n\r\n    return (\r\n        <Canvas\r\n            colorManagement\r\n            shadowMap\r\n            camera={{ position: [0, 0, 5], fov: 50 }}\r\n            resize={{ scroll: false }}\r\n            gl={{\r\n                powerPreference: \"high-performance\",\r\n                alpha: true,\r\n                antialias: false,\r\n                stencil: false,\r\n                depth: false,\r\n            }}\r\n            onCreated={({ gl }) => {\r\n                gl.setClearColor(\"white\");\r\n            }}\r\n        >\r\n            <ambientLight intensity={0.5} />\r\n            <pointLight position={[10, 10, 10]} intensity={0.3} />\r\n            <pointLight position={[-10, -10, -10]} intensity={0.2} />\r\n            <Model />\r\n        </Canvas>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}