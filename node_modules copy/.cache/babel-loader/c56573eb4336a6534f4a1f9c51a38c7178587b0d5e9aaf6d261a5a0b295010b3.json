{"ast":null,"code":"import { BlendFunction, BloomEffect, BrightnessContrastEffect, ChromaticAberrationEffect, ColorAverageEffect, ColorDepthEffect, DepthEffect, EffectComposer as EffectComposer$1, RenderPass, NormalPass, DepthDownsamplingPass, EffectPass, DepthOfFieldEffect, DotScreenEffect, GlitchEffect, GlitchMode, GodRaysEffect, GridEffect, HueSaturationEffect, NoiseEffect, OutlineEffect, PixelationEffect, ScanlineEffect, SelectiveBloomEffect, SepiaEffect, SSAOEffect, SMAAPreset, EdgeDetectionMode, SMAAImageLoader, SMAAEffect, TextureEffect, ToneMappingEffect, VignetteEffect, ShockWaveEffect, LUTEffect, TiltShiftEffect } from 'postprocessing';\nimport React, { forwardRef, useMemo, useLayoutEffect, createContext, useEffect, useRef, useImperativeHandle, useContext, useState } from 'react';\nimport { Vector2, HalfFloatType, Vector3, TextureLoader, sRGBEncoding, RepeatWrapping } from 'three';\nimport { useThree, useFrame, useLoader } from '@react-three/fiber';\nimport { isWebGL2Available } from 'three-stdlib';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { SSREffect } from 'screen-space-reflections';\nconst isRef = ref => !!ref.current;\nconst resolveRef = ref => isRef(ref) ? ref.current : ref;\nconst wrapEffect = function (effectImpl, defaultBlendMode) {\n  if (defaultBlendMode === void 0) {\n    defaultBlendMode = BlendFunction.NORMAL;\n  }\n  return /*#__PURE__*/forwardRef(function Wrap(_ref, ref) {\n    let {\n      blendFunction,\n      opacity,\n      ...props\n    } = _ref;\n    const invalidate = useThree(state => state.invalidate);\n    const effect = useMemo(() => new effectImpl(props), [props]);\n    useLayoutEffect(() => {\n      effect.blendMode.blendFunction = !blendFunction && blendFunction !== 0 ? defaultBlendMode : blendFunction;\n      if (opacity !== undefined) effect.blendMode.opacity.value = opacity;\n      invalidate();\n    }, [blendFunction, effect.blendMode, opacity]);\n    return /*#__PURE__*/React.createElement(\"primitive\", {\n      ref: ref,\n      object: effect,\n      dispose: null\n    });\n  });\n};\nconst useVector2 = (props, key) => {\n  const vec = props[key];\n  return useMemo(() => {\n    if (vec instanceof Vector2) {\n      return new Vector2().set(vec.x, vec.y);\n    } else if (Array.isArray(vec)) {\n      const [x, y] = vec;\n      return new Vector2().set(x, y);\n    }\n  }, [vec]);\n};\nconst Bloom = wrapEffect(BloomEffect, BlendFunction.ADD);\nconst BrightnessContrast = wrapEffect(BrightnessContrastEffect);\nconst ChromaticAberration = /*#__PURE__*/forwardRef(function ChromaticAberration(props, ref) {\n  const offset = useVector2(props, 'offset');\n  const effect = useMemo(() => new ChromaticAberrationEffect({\n    ...props,\n    offset\n  }), [offset, props]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\nconst ColorAverage = /*#__PURE__*/forwardRef(function ColorAverage(_ref, ref) {\n  let {\n    blendFunction = BlendFunction.NORMAL\n  } = _ref;\n\n  /** Because ColorAverage blendFunction is not an object but a number, we have to define a custom prop \"blendFunction\" */\n  const effect = useMemo(() => new ColorAverageEffect(blendFunction), [blendFunction]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\nconst ColorDepth = wrapEffect(ColorDepthEffect);\nconst Depth = wrapEffect(DepthEffect);\nconst EffectComposerContext = /*#__PURE__*/createContext(null);\nconst EffectComposer = /*#__PURE__*/React.memo( /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    children,\n    camera,\n    scene,\n    resolutionScale,\n    enabled = true,\n    renderPriority = 1,\n    autoClear = true,\n    depthBuffer,\n    disableNormalPass,\n    stencilBuffer,\n    multisampling = 8,\n    frameBufferType = HalfFloatType\n  } = _ref;\n  const {\n    gl,\n    scene: defaultScene,\n    camera: defaultCamera,\n    size\n  } = useThree();\n  scene = scene || defaultScene;\n  camera = camera || defaultCamera;\n  const [composer, normalPass, downSamplingPass] = useMemo(() => {\n    const webGL2Available = isWebGL2Available(); // Initialize composer\n\n    const effectComposer = new EffectComposer$1(gl, {\n      depthBuffer,\n      stencilBuffer,\n      multisampling: multisampling > 0 && webGL2Available ? multisampling : 0,\n      frameBufferType\n    }); // Add render pass\n\n    effectComposer.addPass(new RenderPass(scene, camera)); // Create normal pass\n\n    let downSamplingPass = null;\n    let normalPass = null;\n    if (!disableNormalPass) {\n      normalPass = new NormalPass(scene, camera);\n      normalPass.enabled = false;\n      effectComposer.addPass(normalPass);\n      if (resolutionScale !== undefined && webGL2Available) {\n        downSamplingPass = new DepthDownsamplingPass({\n          normalBuffer: normalPass.texture,\n          resolutionScale\n        });\n        downSamplingPass.enabled = false;\n        effectComposer.addPass(downSamplingPass);\n      }\n    }\n    return [effectComposer, normalPass, downSamplingPass];\n  }, [camera, gl, depthBuffer, stencilBuffer, multisampling, frameBufferType, scene, disableNormalPass, resolutionScale]);\n  useEffect(() => composer == null ? void 0 : composer.setSize(size.width, size.height), [composer, size]);\n  useFrame((_, delta) => {\n    if (enabled) {\n      gl.autoClear = autoClear;\n      composer.render(delta);\n    }\n  }, enabled ? renderPriority : 0);\n  const group = useRef(null);\n  useLayoutEffect(() => {\n    let effectPass;\n    if (group.current && group.current.__r3f && composer) {\n      effectPass = new EffectPass(camera, ...group.current.__r3f.objects);\n      effectPass.renderToScreen = true;\n      composer.addPass(effectPass);\n      if (normalPass) normalPass.enabled = true;\n      if (downSamplingPass) downSamplingPass.enabled = true;\n    }\n    return () => {\n      if (effectPass) composer == null ? void 0 : composer.removePass(effectPass);\n      if (normalPass) normalPass.enabled = false;\n      if (downSamplingPass) downSamplingPass.enabled = false;\n    };\n  }, [composer, children, camera, normalPass, downSamplingPass]); // Memoize state, otherwise it would trigger all consumers on every render\n\n  const state = useMemo(() => ({\n    composer,\n    normalPass,\n    downSamplingPass,\n    resolutionScale,\n    camera,\n    scene\n  }), [composer, normalPass, downSamplingPass, resolutionScale, camera, scene]); // Expose the composer\n\n  useImperativeHandle(ref, () => composer, [composer]);\n  return /*#__PURE__*/React.createElement(EffectComposerContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: group\n  }, children));\n}));\nconst DepthOfField = /*#__PURE__*/forwardRef(function DepthOfField(_ref, ref) {\n  let {\n    target,\n    depthTexture,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const {\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new DepthOfFieldEffect(camera, props), [camera, props]);\n  useLayoutEffect(() => {\n    if (target) {\n      const vec = target instanceof Vector3 ? new Vector3().set(target.x, target.y, target.z) : new Vector3().set(target[0], target[1], target[2]);\n      effect.target = vec;\n    }\n    if (depthTexture) effect.setDepthTexture(depthTexture.texture, depthTexture.packing);\n    invalidate();\n  }, [target, depthTexture, effect]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\nconst DotScreen = wrapEffect(DotScreenEffect);\nconst Glitch = /*#__PURE__*/forwardRef(function Glitch(_ref, ref) {\n  let {\n    active = true,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const delay = useVector2(props, 'delay');\n  const duration = useVector2(props, 'duration');\n  const strength = useVector2(props, 'strength');\n  const effect = useMemo(() => new GlitchEffect({\n    ...props,\n    delay,\n    duration,\n    strength\n  }), [delay, duration, props, strength]);\n  useLayoutEffect(() => {\n    effect.mode = active ? props.mode || GlitchMode.SPORADIC : GlitchMode.DISABLED;\n    invalidate();\n  }, [active, effect, props.mode]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\nconst GodRays = /*#__PURE__*/forwardRef(function GodRays(props, ref) {\n  const {\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new GodRaysEffect(camera, props.sun, props), [camera, props]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\nconst Grid = /*#__PURE__*/forwardRef(function Grid(_ref, ref) {\n  let {\n    size,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const effect = useMemo(() => new GridEffect(props), [props]);\n  useLayoutEffect(() => {\n    if (size) effect.setSize(size.width, size.height);\n    invalidate();\n  }, [effect, size]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\nconst HueSaturation = wrapEffect(HueSaturationEffect);\nconst Noise = wrapEffect(NoiseEffect, BlendFunction.COLOR_DODGE);\nconst selectionContext = /*#__PURE__*/createContext(null);\nfunction Selection(_ref) {\n  let {\n    children,\n    enabled = true\n  } = _ref;\n  const [selected, select] = useState([]);\n  const value = useMemo(() => ({\n    selected,\n    select,\n    enabled\n  }), [selected, select, enabled]);\n  return /*#__PURE__*/React.createElement(selectionContext.Provider, {\n    value: value\n  }, children);\n}\nfunction Select(_ref2) {\n  let {\n    enabled = false,\n    children,\n    ...props\n  } = _ref2;\n  const group = useRef(null);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    if (api && enabled) {\n      let changed = false;\n      const current = [];\n      group.current.traverse(o => {\n        o.type === 'Mesh' && current.push(o);\n        if (api.selected.indexOf(o) === -1) changed = true;\n      });\n      if (changed) {\n        api.select(state => [...state, ...current]);\n        return () => {\n          api.select(state => state.filter(selected => !current.includes(selected)));\n        };\n      }\n    }\n  }, [enabled, children]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children);\n}\nconst Outline = /*#__PURE__*/forwardRef(function Outline(_ref, forwardRef) {\n  let {\n    selection = [],\n    selectionLayer = 10,\n    blendFunction,\n    patternTexture,\n    edgeStrength,\n    pulseSpeed,\n    visibleEdgeColor,\n    hiddenEdgeColor,\n    width,\n    height,\n    kernelSize,\n    blur,\n    xRay,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const {\n    scene,\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new OutlineEffect(scene, camera, {\n    blendFunction,\n    patternTexture,\n    edgeStrength,\n    pulseSpeed,\n    visibleEdgeColor,\n    hiddenEdgeColor,\n    width,\n    height,\n    kernelSize,\n    blur,\n    xRay,\n    ...props\n  }), [blendFunction, blur, camera, edgeStrength, height, hiddenEdgeColor, kernelSize, patternTexture, pulseSpeed, scene, visibleEdgeColor, width, xRay]);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    // Do not allow array selection if declarative selection is active\n    // TODO: array selection should probably be deprecated altogether\n    if (!api && selection) {\n      effect.selection.set(Array.isArray(selection) ? selection.map(resolveRef) : [resolveRef(selection)]);\n      invalidate();\n      return () => {\n        effect.selection.clear();\n        invalidate();\n      };\n    }\n  }, [effect, selection, api]);\n  useEffect(() => {\n    effect.selectionLayer = selectionLayer;\n    invalidate();\n  }, [effect, selectionLayer]);\n  useRef();\n  useEffect(() => {\n    if (api && api.enabled) {\n      var _api$selected;\n      if ((_api$selected = api.selected) != null && _api$selected.length) {\n        effect.selection.set(api.selected);\n        invalidate();\n        return () => {\n          effect.selection.clear();\n          invalidate();\n        };\n      }\n    }\n  }, [api]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: forwardRef,\n    object: effect\n  });\n});\nconst Pixelation = /*#__PURE__*/forwardRef(function Pixelation(_ref, ref) {\n  let {\n    granularity = 5\n  } = _ref;\n\n  /** Because GlitchEffect granularity is not an object but a number, we have to define a custom prop \"granularity\" */\n  const effect = useMemo(() => new PixelationEffect(granularity), [granularity]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\nconst Scanline = wrapEffect(ScanlineEffect, BlendFunction.OVERLAY);\nconst addLight = (light, effect) => light.layers.enable(effect.selection.layer);\nconst removeLight = (light, effect) => light.layers.disable(effect.selection.layer);\nconst SelectiveBloom = /*#__PURE__*/forwardRef(function SelectiveBloom(_ref, forwardRef) {\n  let {\n    selection = [],\n    selectionLayer = 10,\n    lights = [],\n    luminanceThreshold,\n    luminanceSmoothing,\n    intensity,\n    width,\n    height,\n    kernelSize,\n    mipmapBlur,\n    radius,\n    levels,\n    ...props\n  } = _ref;\n  if (lights.length === 0) {\n    console.warn('SelectiveBloom requires lights to work.');\n  }\n  const invalidate = useThree(state => state.invalidate);\n  const {\n    scene,\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new SelectiveBloomEffect(scene, camera, {\n    blendFunction: BlendFunction.ADD,\n    luminanceThreshold,\n    luminanceSmoothing,\n    intensity,\n    width,\n    height,\n    kernelSize,\n    mipmapBlur,\n    radius,\n    levels,\n    ...props\n  }), [camera, height, intensity, kernelSize, luminanceSmoothing, luminanceThreshold, scene, width, height, mipmapBlur, radius, levels]);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    // Do not allow array selection if declarative selection is active\n    // TODO: array selection should probably be deprecated altogether\n    if (!api && selection) {\n      effect.selection.set(Array.isArray(selection) ? selection.map(resolveRef) : [resolveRef(selection)]);\n      invalidate();\n      return () => {\n        effect.selection.clear();\n        invalidate();\n      };\n    }\n  }, [effect, selection, api]);\n  useEffect(() => {\n    effect.selection.layer = selectionLayer;\n    invalidate();\n  }, [effect, selectionLayer]);\n  useEffect(() => {\n    if (lights && lights.length > 0) {\n      lights.forEach(light => addLight(resolveRef(light), effect));\n      invalidate();\n      return () => {\n        lights.forEach(light => removeLight(resolveRef(light), effect));\n        invalidate();\n      };\n    }\n  }, [effect, lights, selectionLayer]);\n  useRef();\n  useEffect(() => {\n    if (api && api.enabled) {\n      var _api$selected;\n      if ((_api$selected = api.selected) != null && _api$selected.length) {\n        effect.selection.set(api.selected);\n        invalidate();\n        return () => {\n          effect.selection.clear();\n          invalidate();\n        };\n      }\n    }\n  }, [api]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: forwardRef,\n    object: effect,\n    dispose: null\n  });\n});\nconst Sepia = wrapEffect(SepiaEffect);\nconst SSAO = /*#__PURE__*/forwardRef(function SSAO(props, ref) {\n  const {\n    camera,\n    normalPass,\n    downSamplingPass,\n    resolutionScale\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => {\n    if (normalPass === null && downSamplingPass === null) {\n      console.error('Please enable the NormalPass in the EffectComposer in order to use SSAO.');\n      return null;\n    }\n    return new SSAOEffect(camera, normalPass && !downSamplingPass ? normalPass.texture : null, {\n      blendFunction: BlendFunction.MULTIPLY,\n      samples: 30,\n      rings: 4,\n      distanceThreshold: 1.0,\n      distanceFalloff: 0.0,\n      rangeThreshold: 0.5,\n      rangeFalloff: 0.1,\n      luminanceInfluence: 0.9,\n      radius: 20,\n      scale: 0.5,\n      bias: 0.5,\n      intensity: 1.0,\n      color: null,\n      // @ts-ignore\n      normalDepthBuffer: downSamplingPass ? downSamplingPass.texture : null,\n      resolutionScale: resolutionScale != null ? resolutionScale : 1,\n      depthAwareUpsampling: true,\n      ...props\n    });\n  }, [camera, normalPass, props]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\nconst SMAA = /*#__PURE__*/forwardRef(function SMAA(_ref, ref) {\n  let {\n    preset = SMAAPreset.HIGH,\n    edgeDetectionMode = EdgeDetectionMode.COLOR\n  } = _ref;\n  const smaaProps = useLoader(SMAAImageLoader, '');\n  const effect = useMemo(() => new SMAAEffect(...smaaProps, preset, edgeDetectionMode), [smaaProps, preset, edgeDetectionMode]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\nconst Texture = /*#__PURE__*/forwardRef(function Texture(_ref, ref) {\n  let {\n    textureSrc,\n    texture,\n    ...props\n  } = _ref;\n  const t = useLoader(TextureLoader, textureSrc);\n  useLayoutEffect(() => {\n    t.encoding = sRGBEncoding;\n    t.wrapS = t.wrapT = RepeatWrapping;\n  }, [t]);\n  const effect = useMemo(() => new TextureEffect({\n    ...props,\n    texture: t || texture\n  }), [props, t, texture]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\nconst ToneMapping = wrapEffect(ToneMappingEffect);\nconst Vignette = wrapEffect(VignetteEffect);\nconst ShockWave = wrapEffect(ShockWaveEffect);\nconst LUT = /*#__PURE__*/forwardRef(function LUT(_ref, ref) {\n  let {\n    lut,\n    tetrahedralInterpolation,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const effect = useMemo(() => new LUTEffect(lut, props), [lut, props]);\n  useLayoutEffect(() => {\n    if (lut) effect.setLUT(lut);\n    if (tetrahedralInterpolation) effect.setTetrahedralInterpolationEnabled(tetrahedralInterpolation);\n    invalidate();\n  }, [effect, lut, tetrahedralInterpolation]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\nconst TiltShift = wrapEffect(TiltShiftEffect, BlendFunction.ADD);\nconst SSR = /*#__PURE__*/forwardRef(function SSR(_ref, ref) {\n  let {\n    ENABLE_BLUR = true,\n    USE_MRT = true,\n    ...props\n  } = _ref;\n  const {\n    invalidate\n  } = useThree();\n  const {\n    scene,\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new SSREffect(scene, camera, {\n    ENABLE_BLUR,\n    USE_MRT,\n    ...props\n  }), [SSREffect, scene, camera, ENABLE_BLUR, USE_MRT]);\n  useLayoutEffect(() => {\n    Object.keys(props).forEach(key => effect[key] = props[key]);\n    invalidate();\n  }, [props]);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    if (api && api.enabled) {\n      var _api$selected;\n      if ((_api$selected = api.selected) != null && _api$selected.length) {\n        effect.selection.set(api.selected);\n        invalidate();\n        return () => {\n          effect.selection.clear();\n          invalidate();\n        };\n      }\n    }\n  }, [api]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect\n  });\n});\nexport { Bloom, BrightnessContrast, ChromaticAberration, ColorAverage, ColorDepth, Depth, DepthOfField, DotScreen, EffectComposer, EffectComposerContext, Glitch, GodRays, Grid, HueSaturation, LUT, Noise, Outline, Pixelation, SMAA, SSAO, SSR, Scanline, Select, Selection, SelectiveBloom, Sepia, ShockWave, Texture, TiltShift, ToneMapping, Vignette, selectionContext };","map":{"version":3,"names":["BlendFunction","BloomEffect","BrightnessContrastEffect","ChromaticAberrationEffect","ColorAverageEffect","ColorDepthEffect","DepthEffect","EffectComposer","EffectComposer$1","RenderPass","NormalPass","DepthDownsamplingPass","EffectPass","DepthOfFieldEffect","DotScreenEffect","GlitchEffect","GlitchMode","GodRaysEffect","GridEffect","HueSaturationEffect","NoiseEffect","OutlineEffect","PixelationEffect","ScanlineEffect","SelectiveBloomEffect","SepiaEffect","SSAOEffect","SMAAPreset","EdgeDetectionMode","SMAAImageLoader","SMAAEffect","TextureEffect","ToneMappingEffect","VignetteEffect","ShockWaveEffect","LUTEffect","TiltShiftEffect","React","forwardRef","useMemo","useLayoutEffect","createContext","useEffect","useRef","useImperativeHandle","useContext","useState","Vector2","HalfFloatType","Vector3","TextureLoader","sRGBEncoding","RepeatWrapping","useThree","useFrame","useLoader","isWebGL2Available","_extends","SSREffect","isRef","ref","current","resolveRef","wrapEffect","effectImpl","defaultBlendMode","NORMAL","Wrap","_ref","blendFunction","opacity","props","invalidate","state","effect","blendMode","undefined","value","createElement","object","dispose","useVector2","key","vec","set","x","y","Array","isArray","Bloom","ADD","BrightnessContrast","ChromaticAberration","offset","ColorAverage","ColorDepth","Depth","EffectComposerContext","memo","children","camera","scene","resolutionScale","enabled","renderPriority","autoClear","depthBuffer","disableNormalPass","stencilBuffer","multisampling","frameBufferType","gl","defaultScene","defaultCamera","size","composer","normalPass","downSamplingPass","webGL2Available","effectComposer","addPass","normalBuffer","texture","setSize","width","height","_","delta","render","group","effectPass","__r3f","objects","renderToScreen","removePass","Provider","DepthOfField","target","depthTexture","z","setDepthTexture","packing","DotScreen","Glitch","active","delay","duration","strength","mode","SPORADIC","DISABLED","GodRays","sun","Grid","HueSaturation","Noise","COLOR_DODGE","selectionContext","Selection","selected","select","Select","_ref2","api","changed","traverse","o","type","push","indexOf","filter","includes","Outline","selection","selectionLayer","patternTexture","edgeStrength","pulseSpeed","visibleEdgeColor","hiddenEdgeColor","kernelSize","blur","xRay","map","clear","_api$selected","length","Pixelation","granularity","Scanline","OVERLAY","addLight","light","layers","enable","layer","removeLight","disable","SelectiveBloom","lights","luminanceThreshold","luminanceSmoothing","intensity","mipmapBlur","radius","levels","console","warn","forEach","Sepia","SSAO","error","MULTIPLY","samples","rings","distanceThreshold","distanceFalloff","rangeThreshold","rangeFalloff","luminanceInfluence","scale","bias","color","normalDepthBuffer","depthAwareUpsampling","SMAA","preset","HIGH","edgeDetectionMode","COLOR","smaaProps","Texture","textureSrc","t","encoding","wrapS","wrapT","ToneMapping","Vignette","ShockWave","LUT","lut","tetrahedralInterpolation","setLUT","setTetrahedralInterpolationEnabled","TiltShift","SSR","ENABLE_BLUR","USE_MRT","Object","keys"],"sources":["C:/Users/Dru/Documents/Personal Projects/threeJSBlenderBaby/node_modules/@react-three/postprocessing/dist/index.js"],"sourcesContent":["import { BlendFunction, BloomEffect, BrightnessContrastEffect, ChromaticAberrationEffect, ColorAverageEffect, ColorDepthEffect, DepthEffect, EffectComposer as EffectComposer$1, RenderPass, NormalPass, DepthDownsamplingPass, EffectPass, DepthOfFieldEffect, DotScreenEffect, GlitchEffect, GlitchMode, GodRaysEffect, GridEffect, HueSaturationEffect, NoiseEffect, OutlineEffect, PixelationEffect, ScanlineEffect, SelectiveBloomEffect, SepiaEffect, SSAOEffect, SMAAPreset, EdgeDetectionMode, SMAAImageLoader, SMAAEffect, TextureEffect, ToneMappingEffect, VignetteEffect, ShockWaveEffect, LUTEffect, TiltShiftEffect } from 'postprocessing';\nimport React, { forwardRef, useMemo, useLayoutEffect, createContext, useEffect, useRef, useImperativeHandle, useContext, useState } from 'react';\nimport { Vector2, HalfFloatType, Vector3, TextureLoader, sRGBEncoding, RepeatWrapping } from 'three';\nimport { useThree, useFrame, useLoader } from '@react-three/fiber';\nimport { isWebGL2Available } from 'three-stdlib';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { SSREffect } from 'screen-space-reflections';\n\nconst isRef = ref => !!ref.current;\n\nconst resolveRef = ref => isRef(ref) ? ref.current : ref;\nconst wrapEffect = function (effectImpl, defaultBlendMode) {\n  if (defaultBlendMode === void 0) {\n    defaultBlendMode = BlendFunction.NORMAL;\n  }\n\n  return /*#__PURE__*/forwardRef(function Wrap(_ref, ref) {\n    let {\n      blendFunction,\n      opacity,\n      ...props\n    } = _ref;\n    const invalidate = useThree(state => state.invalidate);\n    const effect = useMemo(() => new effectImpl(props), [props]);\n    useLayoutEffect(() => {\n      effect.blendMode.blendFunction = !blendFunction && blendFunction !== 0 ? defaultBlendMode : blendFunction;\n      if (opacity !== undefined) effect.blendMode.opacity.value = opacity;\n      invalidate();\n    }, [blendFunction, effect.blendMode, opacity]);\n    return /*#__PURE__*/React.createElement(\"primitive\", {\n      ref: ref,\n      object: effect,\n      dispose: null\n    });\n  });\n};\nconst useVector2 = (props, key) => {\n  const vec = props[key];\n  return useMemo(() => {\n    if (vec instanceof Vector2) {\n      return new Vector2().set(vec.x, vec.y);\n    } else if (Array.isArray(vec)) {\n      const [x, y] = vec;\n      return new Vector2().set(x, y);\n    }\n  }, [vec]);\n};\n\nconst Bloom = wrapEffect(BloomEffect, BlendFunction.ADD);\n\nconst BrightnessContrast = wrapEffect(BrightnessContrastEffect);\n\nconst ChromaticAberration = /*#__PURE__*/forwardRef(function ChromaticAberration(props, ref) {\n  const offset = useVector2(props, 'offset');\n  const effect = useMemo(() => new ChromaticAberrationEffect({ ...props,\n    offset\n  }), [offset, props]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst ColorAverage = /*#__PURE__*/forwardRef(function ColorAverage(_ref, ref) {\n  let {\n    blendFunction = BlendFunction.NORMAL\n  } = _ref;\n\n  /** Because ColorAverage blendFunction is not an object but a number, we have to define a custom prop \"blendFunction\" */\n  const effect = useMemo(() => new ColorAverageEffect(blendFunction), [blendFunction]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst ColorDepth = wrapEffect(ColorDepthEffect);\n\nconst Depth = wrapEffect(DepthEffect);\n\nconst EffectComposerContext = /*#__PURE__*/createContext(null);\nconst EffectComposer = /*#__PURE__*/React.memo( /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    children,\n    camera,\n    scene,\n    resolutionScale,\n    enabled = true,\n    renderPriority = 1,\n    autoClear = true,\n    depthBuffer,\n    disableNormalPass,\n    stencilBuffer,\n    multisampling = 8,\n    frameBufferType = HalfFloatType\n  } = _ref;\n  const {\n    gl,\n    scene: defaultScene,\n    camera: defaultCamera,\n    size\n  } = useThree();\n  scene = scene || defaultScene;\n  camera = camera || defaultCamera;\n  const [composer, normalPass, downSamplingPass] = useMemo(() => {\n    const webGL2Available = isWebGL2Available(); // Initialize composer\n\n    const effectComposer = new EffectComposer$1(gl, {\n      depthBuffer,\n      stencilBuffer,\n      multisampling: multisampling > 0 && webGL2Available ? multisampling : 0,\n      frameBufferType\n    }); // Add render pass\n\n    effectComposer.addPass(new RenderPass(scene, camera)); // Create normal pass\n\n    let downSamplingPass = null;\n    let normalPass = null;\n\n    if (!disableNormalPass) {\n      normalPass = new NormalPass(scene, camera);\n      normalPass.enabled = false;\n      effectComposer.addPass(normalPass);\n\n      if (resolutionScale !== undefined && webGL2Available) {\n        downSamplingPass = new DepthDownsamplingPass({\n          normalBuffer: normalPass.texture,\n          resolutionScale\n        });\n        downSamplingPass.enabled = false;\n        effectComposer.addPass(downSamplingPass);\n      }\n    }\n\n    return [effectComposer, normalPass, downSamplingPass];\n  }, [camera, gl, depthBuffer, stencilBuffer, multisampling, frameBufferType, scene, disableNormalPass, resolutionScale]);\n  useEffect(() => composer == null ? void 0 : composer.setSize(size.width, size.height), [composer, size]);\n  useFrame((_, delta) => {\n    if (enabled) {\n      gl.autoClear = autoClear;\n      composer.render(delta);\n    }\n  }, enabled ? renderPriority : 0);\n  const group = useRef(null);\n  useLayoutEffect(() => {\n    let effectPass;\n\n    if (group.current && group.current.__r3f && composer) {\n      effectPass = new EffectPass(camera, ...group.current.__r3f.objects);\n      effectPass.renderToScreen = true;\n      composer.addPass(effectPass);\n      if (normalPass) normalPass.enabled = true;\n      if (downSamplingPass) downSamplingPass.enabled = true;\n    }\n\n    return () => {\n      if (effectPass) composer == null ? void 0 : composer.removePass(effectPass);\n      if (normalPass) normalPass.enabled = false;\n      if (downSamplingPass) downSamplingPass.enabled = false;\n    };\n  }, [composer, children, camera, normalPass, downSamplingPass]); // Memoize state, otherwise it would trigger all consumers on every render\n\n  const state = useMemo(() => ({\n    composer,\n    normalPass,\n    downSamplingPass,\n    resolutionScale,\n    camera,\n    scene\n  }), [composer, normalPass, downSamplingPass, resolutionScale, camera, scene]); // Expose the composer\n\n  useImperativeHandle(ref, () => composer, [composer]);\n  return /*#__PURE__*/React.createElement(EffectComposerContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: group\n  }, children));\n}));\n\nconst DepthOfField = /*#__PURE__*/forwardRef(function DepthOfField(_ref, ref) {\n  let {\n    target,\n    depthTexture,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const {\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new DepthOfFieldEffect(camera, props), [camera, props]);\n  useLayoutEffect(() => {\n    if (target) {\n      const vec = target instanceof Vector3 ? new Vector3().set(target.x, target.y, target.z) : new Vector3().set(target[0], target[1], target[2]);\n      effect.target = vec;\n    }\n\n    if (depthTexture) effect.setDepthTexture(depthTexture.texture, depthTexture.packing);\n    invalidate();\n  }, [target, depthTexture, effect]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst DotScreen = wrapEffect(DotScreenEffect);\n\nconst Glitch = /*#__PURE__*/forwardRef(function Glitch(_ref, ref) {\n  let {\n    active = true,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const delay = useVector2(props, 'delay');\n  const duration = useVector2(props, 'duration');\n  const strength = useVector2(props, 'strength');\n  const effect = useMemo(() => new GlitchEffect({ ...props,\n    delay,\n    duration,\n    strength\n  }), [delay, duration, props, strength]);\n  useLayoutEffect(() => {\n    effect.mode = active ? props.mode || GlitchMode.SPORADIC : GlitchMode.DISABLED;\n    invalidate();\n  }, [active, effect, props.mode]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst GodRays = /*#__PURE__*/forwardRef(function GodRays(props, ref) {\n  const {\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new GodRaysEffect(camera, props.sun, props), [camera, props]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst Grid = /*#__PURE__*/forwardRef(function Grid(_ref, ref) {\n  let {\n    size,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const effect = useMemo(() => new GridEffect(props), [props]);\n  useLayoutEffect(() => {\n    if (size) effect.setSize(size.width, size.height);\n    invalidate();\n  }, [effect, size]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst HueSaturation = wrapEffect(HueSaturationEffect);\n\nconst Noise = wrapEffect(NoiseEffect, BlendFunction.COLOR_DODGE);\n\nconst selectionContext = /*#__PURE__*/createContext(null);\nfunction Selection(_ref) {\n  let {\n    children,\n    enabled = true\n  } = _ref;\n  const [selected, select] = useState([]);\n  const value = useMemo(() => ({\n    selected,\n    select,\n    enabled\n  }), [selected, select, enabled]);\n  return /*#__PURE__*/React.createElement(selectionContext.Provider, {\n    value: value\n  }, children);\n}\nfunction Select(_ref2) {\n  let {\n    enabled = false,\n    children,\n    ...props\n  } = _ref2;\n  const group = useRef(null);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    if (api && enabled) {\n      let changed = false;\n      const current = [];\n      group.current.traverse(o => {\n        o.type === 'Mesh' && current.push(o);\n        if (api.selected.indexOf(o) === -1) changed = true;\n      });\n\n      if (changed) {\n        api.select(state => [...state, ...current]);\n        return () => {\n          api.select(state => state.filter(selected => !current.includes(selected)));\n        };\n      }\n    }\n  }, [enabled, children]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children);\n}\n\nconst Outline = /*#__PURE__*/forwardRef(function Outline(_ref, forwardRef) {\n  let {\n    selection = [],\n    selectionLayer = 10,\n    blendFunction,\n    patternTexture,\n    edgeStrength,\n    pulseSpeed,\n    visibleEdgeColor,\n    hiddenEdgeColor,\n    width,\n    height,\n    kernelSize,\n    blur,\n    xRay,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const {\n    scene,\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new OutlineEffect(scene, camera, {\n    blendFunction,\n    patternTexture,\n    edgeStrength,\n    pulseSpeed,\n    visibleEdgeColor,\n    hiddenEdgeColor,\n    width,\n    height,\n    kernelSize,\n    blur,\n    xRay,\n    ...props\n  }), [blendFunction, blur, camera, edgeStrength, height, hiddenEdgeColor, kernelSize, patternTexture, pulseSpeed, scene, visibleEdgeColor, width, xRay]);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    // Do not allow array selection if declarative selection is active\n    // TODO: array selection should probably be deprecated altogether\n    if (!api && selection) {\n      effect.selection.set(Array.isArray(selection) ? selection.map(resolveRef) : [resolveRef(selection)]);\n      invalidate();\n      return () => {\n        effect.selection.clear();\n        invalidate();\n      };\n    }\n  }, [effect, selection, api]);\n  useEffect(() => {\n    effect.selectionLayer = selectionLayer;\n    invalidate();\n  }, [effect, selectionLayer]);\n  useRef();\n  useEffect(() => {\n    if (api && api.enabled) {\n      var _api$selected;\n\n      if ((_api$selected = api.selected) != null && _api$selected.length) {\n        effect.selection.set(api.selected);\n        invalidate();\n        return () => {\n          effect.selection.clear();\n          invalidate();\n        };\n      }\n    }\n  }, [api]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: forwardRef,\n    object: effect\n  });\n});\n\nconst Pixelation = /*#__PURE__*/forwardRef(function Pixelation(_ref, ref) {\n  let {\n    granularity = 5\n  } = _ref;\n\n  /** Because GlitchEffect granularity is not an object but a number, we have to define a custom prop \"granularity\" */\n  const effect = useMemo(() => new PixelationEffect(granularity), [granularity]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst Scanline = wrapEffect(ScanlineEffect, BlendFunction.OVERLAY);\n\nconst addLight = (light, effect) => light.layers.enable(effect.selection.layer);\n\nconst removeLight = (light, effect) => light.layers.disable(effect.selection.layer);\n\nconst SelectiveBloom = /*#__PURE__*/forwardRef(function SelectiveBloom(_ref, forwardRef) {\n  let {\n    selection = [],\n    selectionLayer = 10,\n    lights = [],\n    luminanceThreshold,\n    luminanceSmoothing,\n    intensity,\n    width,\n    height,\n    kernelSize,\n    mipmapBlur,\n    radius,\n    levels,\n    ...props\n  } = _ref;\n\n  if (lights.length === 0) {\n    console.warn('SelectiveBloom requires lights to work.');\n  }\n\n  const invalidate = useThree(state => state.invalidate);\n  const {\n    scene,\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new SelectiveBloomEffect(scene, camera, {\n    blendFunction: BlendFunction.ADD,\n    luminanceThreshold,\n    luminanceSmoothing,\n    intensity,\n    width,\n    height,\n    kernelSize,\n    mipmapBlur,\n    radius,\n    levels,\n    ...props\n  }), [camera, height, intensity, kernelSize, luminanceSmoothing, luminanceThreshold, scene, width, height, mipmapBlur, radius, levels]);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    // Do not allow array selection if declarative selection is active\n    // TODO: array selection should probably be deprecated altogether\n    if (!api && selection) {\n      effect.selection.set(Array.isArray(selection) ? selection.map(resolveRef) : [resolveRef(selection)]);\n      invalidate();\n      return () => {\n        effect.selection.clear();\n        invalidate();\n      };\n    }\n  }, [effect, selection, api]);\n  useEffect(() => {\n    effect.selection.layer = selectionLayer;\n    invalidate();\n  }, [effect, selectionLayer]);\n  useEffect(() => {\n    if (lights && lights.length > 0) {\n      lights.forEach(light => addLight(resolveRef(light), effect));\n      invalidate();\n      return () => {\n        lights.forEach(light => removeLight(resolveRef(light), effect));\n        invalidate();\n      };\n    }\n  }, [effect, lights, selectionLayer]);\n  useRef();\n  useEffect(() => {\n    if (api && api.enabled) {\n      var _api$selected;\n\n      if ((_api$selected = api.selected) != null && _api$selected.length) {\n        effect.selection.set(api.selected);\n        invalidate();\n        return () => {\n          effect.selection.clear();\n          invalidate();\n        };\n      }\n    }\n  }, [api]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: forwardRef,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst Sepia = wrapEffect(SepiaEffect);\n\nconst SSAO = /*#__PURE__*/forwardRef(function SSAO(props, ref) {\n  const {\n    camera,\n    normalPass,\n    downSamplingPass,\n    resolutionScale\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => {\n    if (normalPass === null && downSamplingPass === null) {\n      console.error('Please enable the NormalPass in the EffectComposer in order to use SSAO.');\n      return null;\n    }\n\n    return new SSAOEffect(camera, normalPass && !downSamplingPass ? normalPass.texture : null, {\n      blendFunction: BlendFunction.MULTIPLY,\n      samples: 30,\n      rings: 4,\n      distanceThreshold: 1.0,\n      distanceFalloff: 0.0,\n      rangeThreshold: 0.5,\n      rangeFalloff: 0.1,\n      luminanceInfluence: 0.9,\n      radius: 20,\n      scale: 0.5,\n      bias: 0.5,\n      intensity: 1.0,\n      color: null,\n      // @ts-ignore\n      normalDepthBuffer: downSamplingPass ? downSamplingPass.texture : null,\n      resolutionScale: resolutionScale != null ? resolutionScale : 1,\n      depthAwareUpsampling: true,\n      ...props\n    });\n  }, [camera, normalPass, props]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst SMAA = /*#__PURE__*/forwardRef(function SMAA(_ref, ref) {\n  let {\n    preset = SMAAPreset.HIGH,\n    edgeDetectionMode = EdgeDetectionMode.COLOR\n  } = _ref;\n  const smaaProps = useLoader(SMAAImageLoader, '');\n  const effect = useMemo(() => new SMAAEffect(...smaaProps, preset, edgeDetectionMode), [smaaProps, preset, edgeDetectionMode]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst Texture = /*#__PURE__*/forwardRef(function Texture(_ref, ref) {\n  let {\n    textureSrc,\n    texture,\n    ...props\n  } = _ref;\n  const t = useLoader(TextureLoader, textureSrc);\n  useLayoutEffect(() => {\n    t.encoding = sRGBEncoding;\n    t.wrapS = t.wrapT = RepeatWrapping;\n  }, [t]);\n  const effect = useMemo(() => new TextureEffect({ ...props,\n    texture: t || texture\n  }), [props, t, texture]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst ToneMapping = wrapEffect(ToneMappingEffect);\n\nconst Vignette = wrapEffect(VignetteEffect);\n\nconst ShockWave = wrapEffect(ShockWaveEffect);\n\nconst LUT = /*#__PURE__*/forwardRef(function LUT(_ref, ref) {\n  let {\n    lut,\n    tetrahedralInterpolation,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const effect = useMemo(() => new LUTEffect(lut, props), [lut, props]);\n  useLayoutEffect(() => {\n    if (lut) effect.setLUT(lut);\n    if (tetrahedralInterpolation) effect.setTetrahedralInterpolationEnabled(tetrahedralInterpolation);\n    invalidate();\n  }, [effect, lut, tetrahedralInterpolation]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst TiltShift = wrapEffect(TiltShiftEffect, BlendFunction.ADD);\n\nconst SSR = /*#__PURE__*/forwardRef(function SSR(_ref, ref) {\n  let {\n    ENABLE_BLUR = true,\n    USE_MRT = true,\n    ...props\n  } = _ref;\n  const {\n    invalidate\n  } = useThree();\n  const {\n    scene,\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new SSREffect(scene, camera, {\n    ENABLE_BLUR,\n    USE_MRT,\n    ...props\n  }), [SSREffect, scene, camera, ENABLE_BLUR, USE_MRT]);\n  useLayoutEffect(() => {\n    Object.keys(props).forEach(key => effect[key] = props[key]);\n    invalidate();\n  }, [props]);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    if (api && api.enabled) {\n      var _api$selected;\n\n      if ((_api$selected = api.selected) != null && _api$selected.length) {\n        effect.selection.set(api.selected);\n        invalidate();\n        return () => {\n          effect.selection.clear();\n          invalidate();\n        };\n      }\n    }\n  }, [api]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect\n  });\n});\n\nexport { Bloom, BrightnessContrast, ChromaticAberration, ColorAverage, ColorDepth, Depth, DepthOfField, DotScreen, EffectComposer, EffectComposerContext, Glitch, GodRays, Grid, HueSaturation, LUT, Noise, Outline, Pixelation, SMAA, SSAO, SSR, Scanline, Select, Selection, SelectiveBloom, Sepia, ShockWave, Texture, TiltShift, ToneMapping, Vignette, selectionContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}