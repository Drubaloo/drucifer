{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dru\\\\Documents\\\\Personal Projects\\\\threeJSBlenderBaby\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { useRef, useState } from 'react';\nimport './App.css';\n\n// function Box(props) {\n//   // This reference will give us direct access to the mesh\n//   const mesh = useRef()\n//   // Set up state for the hovered and active state\n//   const [hovered, setHover] = useState(false)\n//   const [active, setActive] = useState(false)\n//   // Subscribe this component to the render-loop, rotate the mesh every frame\n//   useFrame((state, delta) => (mesh.current.rotation.x += delta))\n//   // Return view, these are regular three.js elements expressed in JSX\n//   return (\n//     <mesh\n//       {...props}\n//       ref={mesh}\n//       scale={active ? 1.5 : 1}\n//       onClick={(event) => setActive(!active)}\n//       onPointerOver={(event) => setHover(true)}\n//       onPointerOut={(event) => setHover(false)}>\n//       <boxGeometry args={[1, 1, 1]} />\n//       <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n//     </mesh>\n//   )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  function handleClick() {\n    alert(inputRef.current);\n    inputRef.current.focus();\n  }\n  return (\n    /*#__PURE__*/\n    // <Canvas>\n    //   <ambientLight />\n    // <pointLight position={[10, 10, 10]} />\n    // <Box position={[-1.2, 0, 0]} />\n    // <Box position={[1.2, 0, 0]} />\n    // </Canvas>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Focus Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Canvas","useFrame","useRef","useState","jsxDEV","_jsxDEV","App","_s","inputRef","handleClick","alert","current","focus","children","type","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dru/Documents/Personal Projects/threeJSBlenderBaby/src/App.js"],"sourcesContent":["import { Canvas, useFrame } from '@react-three/fiber'\nimport {useRef , useState } from 'react'\nimport './App.css';\n\n// function Box(props) {\n//   // This reference will give us direct access to the mesh\n//   const mesh = useRef()\n//   // Set up state for the hovered and active state\n//   const [hovered, setHover] = useState(false)\n//   const [active, setActive] = useState(false)\n//   // Subscribe this component to the render-loop, rotate the mesh every frame\n//   useFrame((state, delta) => (mesh.current.rotation.x += delta))\n//   // Return view, these are regular three.js elements expressed in JSX\n//   return (\n//     <mesh\n//       {...props}\n//       ref={mesh}\n//       scale={active ? 1.5 : 1}\n//       onClick={(event) => setActive(!active)}\n//       onPointerOver={(event) => setHover(true)}\n//       onPointerOut={(event) => setHover(false)}>\n//       <boxGeometry args={[1, 1, 1]} />\n//       <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n//     </mesh>\n//   )\n// }\n\n\n\nfunction App() {\n  const inputRef = useRef(null);\n  \n  function handleClick() {\n    alert(inputRef.current)\n    inputRef.current.focus();\n  }\n  return (\n    // <Canvas>\n    //   <ambientLight />\n    // <pointLight position={[10, 10, 10]} />\n    // <Box position={[-1.2, 0, 0]} />\n    // <Box position={[1.2, 0, 0]} />\n    // </Canvas>\n    <div>\n    <input type=\"text\" ref={inputRef} />\n    <button onClick={handleClick}>Focus Input</button>\n  </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AACrD,SAAQC,MAAM,EAAGC,QAAQ,QAAQ,OAAO;AACxC,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7B,SAASO,WAAWA,CAAA,EAAG;IACrBC,KAAK,CAACF,QAAQ,CAACG,OAAO,CAAC;IACvBH,QAAQ,CAACG,OAAO,CAACC,KAAK,EAAE;EAC1B;EACA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACAP,OAAA;MAAAQ,QAAA,gBACAR,OAAA;QAAOS,IAAI,EAAC,MAAM;QAACC,GAAG,EAAEP;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpCd,OAAA;QAAQe,OAAO,EAAEX,WAAY;QAAAI,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC9C;AAER;AAACZ,EAAA,CAnBQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}